name: Build lunasvg module

on: [push, pull_request]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist \
            -Csetup-args=-Dsdist=true \
            -Csetup-args=--wrap-mode=nodownload
            
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: ./dist/*.tar.gz
          
  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            id: win_amd64
          - os: ubuntu-latest
            id: manylinux_x86_64
          - os: macos-latest
            id: macosx_arm64
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.1
        env:
          CIBW_BUILD: cp38-${{ matrix.id }} cp39-${{ matrix.id }} cp310-${{ matrix.id }} cp311-${{ matrix.id }} cp312-${{ matrix.id }}
          CIBW_CONFIG_SETTINGS: setup-args=--wrap-mode=forcefallback
          CIBW_CONFIG_SETTINGS_WINDOWS: setup-args=--vsenv
          CIBW_BUILD_VERBOSITY: 1
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-${{ matrix.id }}-wheels
          path: ./wheelhouse/*.whl
          
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          merge-multiple: true
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
